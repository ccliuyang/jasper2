<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator>
  <link href="/tag/embed/feed.xml" rel="self" type="application/atom+xml" />
  <link href="/" rel="alternate" type="text/html" />
  <updated>2020-03-20T04:04:23+00:00</updated>
  <id>/tag/embed/feed.xml</id>

  
  
  

  
    <title type="html">Ghost | </title>
  

  
    <subtitle>The professional publishing platform</subtitle>
  

  

  
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
  

  
  

  
    <entry>
      <title type="html">嵌入式开发概述</title>
      <link href="/embd-development" rel="alternate" type="text/html" title="嵌入式开发概述" />
      <published>2020-03-01T00:57:00+00:00</published>
      <updated>2020-03-01T00:57:00+00:00</updated>
      <id>/embd-development</id>
      <content type="html" xml:base="/embd-development">&lt;h1 id=&quot;嵌入式开发概述&quot;&gt;嵌入式开发概述&lt;/h1&gt;
&lt;p&gt;@&lt;a href=&quot;目录&quot;&gt;toc&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;嵌入式开发特点&quot;&gt;嵌入式开发特点&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200224081648925.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1FRMjc1MTc2NjI5,size_16,color_FFFFFF,t_70&quot; alt=&quot;嵌入式系统特点&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;使用开发板开发，提供相关的底层工具
极少有直接拿一个ARM CPU来做开发，尽量让工程师的开发面向功能。&lt;/li&gt;
  &lt;li&gt;交叉式开发
PC端编译，嵌入式硬件式上运行，编译调试都要配置环境。&lt;/li&gt;
  &lt;li&gt;调试可能需要特定环境开发
比如温度测试功能，几千度的温度怎么仿真？
了解硬件&lt;/li&gt;
  &lt;li&gt;调试模式
一般使用仿真器进行开发， 需要硬件、调试器相互配合，不一定是通用的（JTAG是跨平台的）
&lt;img src=&quot;https://img-blog.csdnimg.cn/20200224081734724.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1FRMjc1MTc2NjI5,size_16,color_FFFFFF,t_70&quot; alt=&quot;宿主机-目标机 调试模式&quot; /&gt;
    &lt;h2 id=&quot;嵌入式系统开发流程&quot;&gt;嵌入式系统开发流程&lt;/h2&gt;
  &lt;/li&gt;
  &lt;li&gt;层级结构
    &lt;ul&gt;
      &lt;li&gt;执行装置：被控对象（电机）&lt;/li&gt;
      &lt;li&gt;功能层
        &lt;ul&gt;
          &lt;li&gt;应用程序&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;软件层
        &lt;ul&gt;
          &lt;li&gt;文件系统&lt;/li&gt;
          &lt;li&gt;图形用户接口&lt;/li&gt;
          &lt;li&gt;任务管理&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;实时操作系统（RTOS）&lt;/li&gt;
      &lt;li&gt;HAL、BSP 硬件抽象层
  排除许多硬件相关，多变的操作（地址、中断等）。方便跨平台。&lt;/li&gt;
      &lt;li&gt;硬件层
        &lt;ul&gt;
          &lt;li&gt;MCU&lt;/li&gt;
          &lt;li&gt;通用接口&lt;/li&gt;
          &lt;li&gt;人机交互接口
  -
  -
&lt;img src=&quot;https://img-blog.csdnimg.cn/20200224081938174.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1FRMjc1MTc2NjI5,size_16,color_FFFFFF,t_70&quot; alt=&quot;在这里插入图片描述&quot; /&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;HAL、BSP 硬件抽象层&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200224082409391.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1FRMjc1MTc2NjI5,size_16,color_FFFFFF,t_70&quot; alt=&quot;在这里插入图片描述&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;uml-通用建模语言工具&quot;&gt;UML 通用建模语言工具&lt;/h2&gt;
&lt;p&gt;UML是一个通用化的工具，可用于形成规范化的关系图谱，并形成相关的代码原型等。&lt;/p&gt;

&lt;h3 id=&quot;uml支持的图类别&quot;&gt;UML支持的图类别&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;用例图&lt;/li&gt;
  &lt;li&gt;类图&lt;/li&gt;
  &lt;li&gt;对象图&lt;/li&gt;
  &lt;li&gt;状态图
状态机，状态转移（有条件）&lt;/li&gt;
  &lt;li&gt;顺序图&lt;/li&gt;
  &lt;li&gt;协作图&lt;/li&gt;
  &lt;li&gt;活动图&lt;/li&gt;
  &lt;li&gt;组件图&lt;/li&gt;
  &lt;li&gt;部署图
&lt;img src=&quot;https://img-blog.csdnimg.cn/20200224084636578.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1FRMjc1MTc2NjI5,size_16,color_FFFFFF,t_70&quot; alt=&quot;用例图&quot; /&gt;
&lt;img src=&quot;https://img-blog.csdnimg.cn/20200224084947391.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1FRMjc1MTc2NjI5,size_16,color_FFFFFF,t_70&quot; alt=&quot;在这里插入图片描述&quot; /&gt;
&lt;img src=&quot;https://img-blog.csdnimg.cn/2020022408495783.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1FRMjc1MTc2NjI5,size_16,color_FFFFFF,t_70&quot; alt=&quot;在这里插入图片描述&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;</content>

      
      
      
      
      

      <author>
          <name>Dexfire Alex</name>
        
        
      </author>

      

      
        <category term="embed" />
      

      
        <summary type="html">嵌入式开发概述 @toc 嵌入式开发特点 使用开发板开发，提供相关的底层工具 极少有直接拿一个ARM CPU来做开发，尽量让工程师的开发面向功能。 交叉式开发 PC端编译，嵌入式硬件式上运行，编译调试都要配置环境。 调试可能需要特定环境开发 比如温度测试功能，几千度的温度怎么仿真？ 了解硬件 调试模式 一般使用仿真器进行开发， 需要硬件、调试器相互配合，不一定是通用的（JTAG是跨平台的） 嵌入式系统开发流程 层级结构 执行装置：被控对象（电机） 功能层 应用程序 软件层 文件系统 图形用户接口 任务管理 实时操作系统（RTOS） HAL、BSP 硬件抽象层 排除许多硬件相关，多变的操作（地址、中断等）。方便跨平台。 硬件层 MCU 通用接口 人机交互接口 - - HAL、BSP 硬件抽象层</summary>
      

      
      
    </entry>
  
</feed>
