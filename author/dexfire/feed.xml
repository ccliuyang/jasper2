<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator>
  <link href="/author/dexfire/feed.xml" rel="self" type="application/atom+xml" />
  <link href="/" rel="alternate" type="text/html" />
  <updated>2020-03-18T15:53:42+00:00</updated>
  <id>/author/dexfire/feed.xml</id>

  
  
  

  
    <title type="html">Ghost | </title>
  

  
    <subtitle>The professional publishing platform</subtitle>
  

  

  
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
  

  
  

  
    <entry>
      <title type="html">【Python基础】日志处理之logging模块</title>
      <link href="/Python%E5%9F%BA%E7%A1%80-%E6%97%A5%E5%BF%97%E5%A4%84%E7%90%86%E4%B9%8Blogging%E6%A8%A1%E5%9D%97" rel="alternate" type="text/html" title="【Python基础】日志处理之logging模块" />
      <published>2020-03-17T23:10:00+00:00</published>
      <updated>2020-03-17T23:10:00+00:00</updated>
      <id>/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%91%E6%97%A5%E5%BF%97%E5%A4%84%E7%90%86%E4%B9%8Blogging%E6%A8%A1%E5%9D%97</id>
      <content type="html" xml:base="/Python%E5%9F%BA%E7%A1%80-%E6%97%A5%E5%BF%97%E5%A4%84%E7%90%86%E4%B9%8Blogging%E6%A8%A1%E5%9D%97">&lt;h1 id=&quot;python基础日志处理之logging模块&quot;&gt;【Python基础】日志处理之logging模块&lt;/h1&gt;

&lt;p&gt;logging 是 Python 内建的实用日志输出模块，可以为应用与库定义了实现灵活的事件日志系统的函数与类.&lt;/p&gt;

&lt;p&gt;使用标准库提提供的 logging API 最主要的好处是，所有的 Python 模块都可能参与日志输出，包括你的日志消息和第三方模块的日志消息。&lt;/p&gt;

&lt;p&gt;这个模块提供许多强大而灵活的功能。如果你对 logging 不太熟悉的话， 掌握它最好的方式就是查看它对应的教程。&lt;/p&gt;

&lt;p&gt;该模块定义的基础类和函数都列在下面。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;记录器[&lt;code class=&quot;highlighter-rouge&quot;&gt;Logger&lt;/code&gt;]暴露了应用程序代码直接使用的接口。&lt;/li&gt;
  &lt;li&gt;处理程序[&lt;code class=&quot;highlighter-rouge&quot;&gt;Handler&lt;/code&gt;]将日志记录（由记录器创建）发送到适当的目标。&lt;/li&gt;
  &lt;li&gt;过滤器[&lt;code class=&quot;highlighter-rouge&quot;&gt;Filter&lt;/code&gt;]提供了更精细的设施，用于确定要输出的日志记录。&lt;/li&gt;
  &lt;li&gt;格式化程序[&lt;code class=&quot;highlighter-rouge&quot;&gt;Formatter&lt;/code&gt;]指定最终输出中日志记录的样式。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.python.org/zh-cn/3/library/logging.html?highlight=argparse#logging.Formatter&quot;&gt;Python 文档： logging — Python 的日志记录工具&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;logging-测试代码&quot;&gt;logging 测试代码&lt;/h2&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Python&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;7.4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e09359112e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Jul&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2019&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;34&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MSC&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1916&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bit&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AMD64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;win32&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;help&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;copyright&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;credits&quot;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;license()&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;more&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;information&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;logging&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getLogger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'log'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 测试一下异常处理&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NoneType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;BaseException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'OK!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;OK&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NoneType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Traceback&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;most&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;pyshell#4&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;TypeError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;missing&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;required&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;positional&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'msg'&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 日志文件输出&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setLevel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INFO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Formatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%(asctime)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%(filename)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s[line:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%(lineno)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;d] &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%(levelname)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%(message)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FileHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;a.log&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'utf8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setLevell&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DEBUG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Traceback&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;most&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;pyshell#8&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setLevell&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DEBUG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;AttributeError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'FileHandler'&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;has&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;no&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attribute&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'setLevell'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setLevel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DEBUG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setFormatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;addHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 设置以后，终端讲不再看到 日志输出&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Hello'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setLevel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INFO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Traceback&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;most&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;pyshell#14&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;NameError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'hello'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defined&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello, Foolish Logging.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;输出结果&quot;&gt;输出结果&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;输出：&lt;/strong&gt; a.log&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-log&quot;&gt;2020-03-17 23:06:46,292 &amp;lt;pyshell#12&amp;gt;[line:1] INFO Hello
2020-03-17 23:07:39,933 &amp;lt;pyshell#15&amp;gt;[line:1] INFO Hello, Foolish Logging.
&lt;/code&gt;&lt;/pre&gt;</content>

      
      
      
      
      

      <author>
          <name>Dexfire Alex</name>
        
        
      </author>

      

      
        <category term="python" />
      
        <category term="dev" />
      

      
        <summary type="html">【Python基础】日志处理之logging模块</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">【光学】球面波 – 光学基础</title>
      <link href="/%E5%85%89%E5%AD%A6-%E5%85%89%E5%AD%A6%E5%88%86%E7%95%8C%E9%9D%A2%E4%B8%8A%E7%9A%84%E5%85%89%E5%AD%A6%E6%80%A7%E8%B4%A8" rel="alternate" type="text/html" title="【光学】球面波 -- 光学基础" />
      <published>2020-03-17T16:49:00+00:00</published>
      <updated>2020-03-17T16:49:00+00:00</updated>
      <id>/%E3%80%90%E5%85%89%E5%AD%A6%E3%80%91%E5%85%89%E5%AD%A6%E5%88%86%E7%95%8C%E9%9D%A2%E4%B8%8A%E7%9A%84%E5%85%89%E5%AD%A6%E6%80%A7%E8%B4%A8</id>
      <content type="html" xml:base="/%E5%85%89%E5%AD%A6-%E5%85%89%E5%AD%A6%E5%88%86%E7%95%8C%E9%9D%A2%E4%B8%8A%E7%9A%84%E5%85%89%E5%AD%A6%E6%80%A7%E8%B4%A8">&lt;h1 id=&quot;光学光学分界面上的光学性质&quot;&gt;【光学】光学分界面上的光学性质&lt;/h1&gt;

&lt;p&gt;波矢的大小的含义，即光波能量传播的&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;投影对任意坐标轴的投影会变小，因为可以投影成三个坐标分量，故任意波可以分解为三个平面波场，波矢大小分别为 $kx,ky,kz$&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;波矢已经确定了，本征模就不能分解了。那么怎么理解呢，平面波场就是等相位面沿着波矢的传播，等相位面之间的间距就是波长，沿着传播方向看肯定就是 $\lambda$ ，但是波矢不一定是沿着 $x, y, z$ 方向，沿着不同方向上看（$x, y, z$），反应出来的波场不同，结果导致的波场分布&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;平面波矢确定以后，沿着不同的方向去看，其表现出的波场现象不同。
已经是本征波解，不能分解是合理的。&lt;/p&gt;

&lt;h2 id=&quot;引入&quot;&gt;引入&lt;/h2&gt;

&lt;p&gt;光线在&lt;br /&gt;
$r_s^2+r_p^2 \neq 1$
这里是不是能量不守恒？还是我们推导有问题呢？
&lt;img src=&quot;/assets/images/QQ截图20200317172755.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;因为：光场在投射时光束宽度发生了变化。&lt;/p&gt;

&lt;p&gt;光强是单位面积上的能量强度。
光强和功率之间的区别，总功率是和面积相关的。
所以，激光器的功率与激光器光强是两个概念。&lt;/p&gt;

&lt;p&gt;要得到能量守恒的结论，需要加入&lt;/p&gt;

&lt;p&gt;因为光束发生了变化。&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Dexfire Alex</name>
        
        
      </author>

      

      
        <category term="math" />
      
        <category term="optics" />
      

      
        <summary type="html">【光学】光学分界面上的光学性质</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">【光学】球面波 – 光学基础</title>
      <link href="/%E5%85%89%E5%AD%A6-%E7%90%83%E9%9D%A2%E6%B3%A2-%E5%85%89%E5%AD%A6%E5%9F%BA%E7%A1%80" rel="alternate" type="text/html" title="【光学】球面波 -- 光学基础" />
      <published>2020-03-17T00:10:00+00:00</published>
      <updated>2020-03-17T00:10:00+00:00</updated>
      <id>/%E3%80%90%E5%85%89%E5%AD%A6%E3%80%91%E7%90%83%E9%9D%A2%E6%B3%A2%20--%20%E5%85%89%E5%AD%A6%E5%9F%BA%E7%A1%80</id>
      <content type="html" xml:base="/%E5%85%89%E5%AD%A6-%E7%90%83%E9%9D%A2%E6%B3%A2-%E5%85%89%E5%AD%A6%E5%9F%BA%E7%A1%80">&lt;h1 id=&quot;光学球面波--光学基础&quot;&gt;【光学】球面波 – 光学基础&lt;/h1&gt;
&lt;p&gt;光学中最常用的球面波公式：
&lt;script type=&quot;math/tex&quot;&gt;U(x,y,z) = \frac{a_0}{r}e^{j \theta} = \frac{a_0}{r}e^{j\overrightarrow{k} \cdot \overrightarrow{r}}&lt;/script&gt;
事实上，这个等式是&lt;strong&gt;亥姆霍兹方程&lt;/strong&gt;的一组简单解。&lt;/p&gt;

&lt;p&gt;并且，其中 $\overrightarrow{k} \cdot \overrightarrow{r}$ 是光波位相，$\displaystyle \theta =\frac{2 \pi}{\lambda} \overrightarrow{n}\cdot \overrightarrow{r}$，其中$n$是波矢 $\overrightarrow{k}$ 的单位方向向量，$\overrightarrow{n}\cdot \overrightarrow{r}$是有效光程，$\displaystyle \frac{1}{\lambda}\overrightarrow{k} \cdot \overrightarrow{r}$则代表了通过$\overrightarrow{n} \cdot \overrightarrow{r}$的有效光程中经过了多少个&lt;strong&gt;空间周期$\lambda$&lt;/strong&gt;，再乘以$2\pi$则成为位相变化因子，即 $\displaystyle \theta=\overrightarrow{k} \cdot \overrightarrow{r} = \frac{2 \pi}{\lambda}\overrightarrow{n} \cdot \overrightarrow{r}$。&lt;/p&gt;

&lt;p&gt;在通常的光学问题分析中，我们并不关心共同位相初始量（通常为一个巨大常数，且随着共同时间位相因子$j\omega t$迅速变化），而仅仅考虑相对位相差，而将共同位相初始量排除在振幅因子 $A$ 中。&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Dexfire Alex</name>
        
        
      </author>

      

      
        <category term="math" />
      
        <category term="optics" />
      

      
        <summary type="html">【光学】球面波 – 光学基础 光学中最常用的球面波公式： 事实上，这个等式是亥姆霍兹方程的一组简单解。</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">【光学】数字图像处理</title>
      <link href="/%E5%85%89%E5%AD%A6-%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86" rel="alternate" type="text/html" title="【光学】数字图像处理" />
      <published>2020-03-16T11:24:00+00:00</published>
      <updated>2020-03-16T11:24:00+00:00</updated>
      <id>/%E3%80%90%E5%85%89%E5%AD%A6%E3%80%91%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86</id>
      <content type="html" xml:base="/%E5%85%89%E5%AD%A6-%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86">&lt;p&gt;（1）静止图像 $\displaystyle I=f(x,y,z,\lambda)$&lt;br /&gt;
（2）平面图像 $\displaystyle I=f(x,y,\lambda,t)$ &lt;br /&gt;
（3）灰度图像 $\displaystyle I=f(x,y,z,t)$&lt;br /&gt;
（4）模拟图像 $\displaystyle I=f(x,y,z,\lambda,t)$  xyz连续&lt;br /&gt;
（5）数字图像 $\displaystyle I=f(x,y,z,\lambda,t)$  xyz离散&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Dexfire Alex</name>
        
        
      </author>

      

      
        <category term="math" />
      
        <category term="optics" />
      

      
        <summary type="html">（1）静止图像 $\displaystyle I=f(x,y,z,\lambda)$ （2）平面图像 $\displaystyle I=f(x,y,\lambda,t)$ （3）灰度图像 $\displaystyle I=f(x,y,z,t)$ （4）模拟图像 $\displaystyle I=f(x,y,z,\lambda,t)$ xyz连续 （5）数字图像 $\displaystyle I=f(x,y,z,\lambda,t)$ xyz离散</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">【光学】数字图像处理</title>
      <link href="/%E8%BD%AC%E5%8F%91-%E6%A2%A6%E7%BB%88%E5%BD%92%E5%8F%AA%E6%98%AF%E6%A2%A6-%E5%8F%AA%E6%9C%89%E8%A1%8C%E5%8A%A8%E6%89%8D%E8%83%BD%E6%9C%89%E6%89%80%E6%94%B6%E8%8E%B7" rel="alternate" type="text/html" title="【光学】数字图像处理" />
      <published>2020-03-16T11:24:00+00:00</published>
      <updated>2020-03-16T11:24:00+00:00</updated>
      <id>/%E3%80%90%E8%BD%AC%E5%8F%91%E3%80%91%E6%A2%A6%E7%BB%88%E5%BD%92%E5%8F%AA%E6%98%AF%E6%A2%A6,%E5%8F%AA%E6%9C%89%E8%A1%8C%E5%8A%A8%E6%89%8D%E8%83%BD%E6%9C%89%E6%89%80%E6%94%B6%E8%8E%B7</id>
      <content type="html" xml:base="/%E8%BD%AC%E5%8F%91-%E6%A2%A6%E7%BB%88%E5%BD%92%E5%8F%AA%E6%98%AF%E6%A2%A6-%E5%8F%AA%E6%9C%89%E8%A1%8C%E5%8A%A8%E6%89%8D%E8%83%BD%E6%9C%89%E6%89%80%E6%94%B6%E8%8E%B7">&lt;h1 id=&quot;转发梦终归只是梦只有行动才能有所收获&quot;&gt;【转发】梦终归只是梦，只有行动才能有所收获&lt;/h1&gt;</content>

      
      
      
      
      

      <author>
          <name>Dexfire Alex</name>
        
        
      </author>

      

      
        <category term="math" />
      
        <category term="optics" />
      

      
        <summary type="html">【转发】梦终归只是梦，只有行动才能有所收获</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">【CS】编译原理</title>
      <link href="/CS-%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86" rel="alternate" type="text/html" title="【CS】编译原理" />
      <published>2020-03-16T11:24:00+00:00</published>
      <updated>2020-03-16T11:24:00+00:00</updated>
      <id>/%E3%80%90CS%E3%80%91%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86</id>
      <content type="html" xml:base="/CS-%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86">&lt;h1 id=&quot;编译原理&quot;&gt;编译原理&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;什么是编译？&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;编译是指将&lt;strong&gt;高级语言&lt;/strong&gt;代码（C，C++，Java等），通过低级语言（通常为&lt;strong&gt;汇编&lt;/strong&gt;）实现的过程，最终输出为机器可执行的&lt;strong&gt;二进制机器码&lt;/strong&gt;文件。&lt;/p&gt;

&lt;p&gt;最常接触到的是 C/C++ 编译过程，C/C++ 是一门十分高效的编程语言，其面向对象的编码思想，与其丰富的工具库，高效率的执行机制，使其成为了当今几乎所有性能依赖场景的主流编程语言。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;编译工作的几个步骤：&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;编译过程通常可以抽象为几个过程：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;预处理&lt;/li&gt;
  &lt;li&gt;编译&lt;/li&gt;
  &lt;li&gt;链接&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;C/C++ 语言编译流程与编译工具链(toolchain)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;C/C++ 代码在编译过程中使用工具链（toolchain）来进行整个编译工作，工具链是一系列预编译好的可执行工具程序、预编译库、预编译头文件、辅助脚本等组件构成，可以完成简单文件的编译工作。&lt;/p&gt;

&lt;p&gt;一款盛名远扬的开源编译工具链：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GCC&lt;/strong&gt;: GNU(Gnu’s Not Unix)编译器套装(GNU Compiler Collection)：&lt;/p&gt;

&lt;p&gt;以GPL及LGPL许可证所发行的自由软件，也是GNU项目的关键部分，也是GNU工具链的主要组成部分之一。GCC(特别是其中的C语言编译器)也常被认为是跨平台编译器的事实标准。1985年由理查德·马修·斯托曼开始发展，&lt;strong&gt;现在由自由软件基金会负责维护工作&lt;/strong&gt;。GCC原本用C开发，后来因为LLVM、Clang的崛起，它才将开发语言转换为C++。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;GCC支持的语言：原名为GNU C语言编译器(GNU C Compiler)，因为它原本只能处理C语言。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;GCC在发布后很快地得到扩展，变得可处理C++。之后也变得可处理Fortran、Pascal、Objective-C、Java、Ada，Go与其他语言。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;许多操作系统，包括许多类Unix系统，如Linux及BSD家族都采用GCC作为标准编译器。苹果电脑预装的Mac OS X操作系统也采用这个编译器。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;GCC目前由世界各地不同的数个程序员小组维护。它是移植到最多中央处理器架构以及最多操作系统的编译器。由于GCC已成为GNU系统的官方编译器(包括GNU/Linux家族)，它也成为编译与创建其他操作系统的主要编译器，包括BSD家族、Mac OS X、NeXTSTEP与BeOS。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;GCC通常是跨平台软件的编译器首选。有别于一般局限于特定系统与运行环境的编译器，GCC在所有平台上都使用同一个前端处理程序，产生一样的中介码，因此此中介码在各个其他平台上使用GCC编译，有很大的机会可得到正确无误的输出程序。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;GCC支持的主要处理器架构：ARM、x86、x86-64、MIPS、PowerPC等。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;GCC结构：GCC的外部接口长得像一个标准的Unix编译器。用户在命令行下键入gcc之程序名，以及一些命令参数，以便决定每个输入文件使用的个别语言编译器，并为输出代码使用适合此硬件平台的汇编语言编译器，并且选择性地运行连接器以制造可执行的程序。每个语言编译器都是独立程序，此程序可处理输入的源代码，并输出汇编语言码。全部的语言编译器都拥有共通的中介架构：一个前端解析匹配此语言的源代码，并产生一抽象语法树，以及一翻译此语法树成为GCC的寄存器转换语言的后端。编译器最优化与静态代码解析技术在此阶段应用于代码上。最后，适用于此硬件架构的汇编语言代码以杰克·戴维森与克里斯·弗雷泽发明的算法产出。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;几乎全部的GCC都由C/C++写成，除了Ada前端大部分以Ada写成。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;编译器前端：编译组织器（典例：clang）&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Clang：是一个C、C++、Objective-C和Objective-C++编程语言的编译器前端。它采用了底层虚拟机(LLVM)作为其后端。它的目标是提供一个GNU编译器套装(GCC)的替代品。作者是克里斯·拉特纳(Chris Lattner)，在苹果公司的赞助支持下进行开发，而源代码授权是使用类BSD的伊利诺伊大学厄巴纳-香槟分校开源码许可。Clang主要由C++编写。&lt;/p&gt;

&lt;p&gt;Clang项目包括Clang前端和Clang静态分析器等。这个软件项目在2005年由苹果电脑发起，是LLVM(Low Level Virtual Machine)编译器工具集的前端(front-end)，目的是输出代码对应的抽象语法树(Abstract Syntax Tree, AST)，并将代码编译成LLVM Bitcode。接着在后端(back-end)使用LLVM编译成平台相关的机器语言。&lt;/p&gt;

&lt;p&gt;Clang本身性能优异，其生成的AST所耗用掉的内存仅仅是GCC的20%左右。2014年1月发行的FreeBSD 10.0版将Clang/LLVM作为默认编译器。&lt;/p&gt;

&lt;p&gt;Clang性能：测试证明Clang编译Objective-C代码时速度为GCC的3倍，还能针对用户发生的编译错误准确地给出建议。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;作者：跃文
链接：https://www.jianshu.com/p/ed17352299ec
来源：简书
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Dexfire Alex</name>
        
        
      </author>

      

      
        <category term="cs" />
      
        <category term="dev" />
      
        <category term="embd" />
      

      
        <summary type="html">编译原理</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">【光学】数字图像处理</title>
      <link href="/%E4%BF%A1%E6%81%AF%E5%85%89%E5%AD%A6-%E5%87%A0%E4%B8%AA%E9%87%8D%E8%A6%81%E6%8E%A8%E8%AE%BA" rel="alternate" type="text/html" title="【光学】数字图像处理" />
      <published>2020-03-16T11:24:00+00:00</published>
      <updated>2020-03-16T11:24:00+00:00</updated>
      <id>/%E3%80%90%E4%BF%A1%E6%81%AF%E5%85%89%E5%AD%A6%E3%80%91%E5%87%A0%E4%B8%AA%E9%87%8D%E8%A6%81%E6%8E%A8%E8%AE%BA</id>
      <content type="html" xml:base="/%E4%BF%A1%E6%81%AF%E5%85%89%E5%AD%A6-%E5%87%A0%E4%B8%AA%E9%87%8D%E8%A6%81%E6%8E%A8%E8%AE%BA">&lt;h1 id=&quot;信息光学几个重要推论&quot;&gt;【信息光学】几个重要推论&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;光波通过孔径、半透明物体、遮挡面等光学元件时，其幅度收到元件透过率影响。
&lt;script type=&quot;math/tex&quot;&gt;U_o(x,y) = U_i(x,y) \cdot t(x,y)&lt;/script&gt;
而在频域，则表现为&lt;em&gt;入射光场频谱&lt;/em&gt;与&lt;em&gt;透过率函数频谱&lt;/em&gt;成&lt;strong&gt;卷积关系&lt;/strong&gt;。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;孔径的周期性排列，由阵列定理，其透过率表达式为单孔径透过率函数与向各位置位移的δ函数的卷积，即：
&lt;script type=&quot;math/tex&quot;&gt;t(x,y) = t(x,y) * \sum_{n=1}^N \delta (x-\xi_n,y-\eta_n)&lt;/script&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;几种常见孔径的透过率函数及其频谱：&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;矩形孔，$x$ 方向长度为 $a$，$y$ 方向长度为 $b$ &lt;br /&gt;
透过率函数：
&lt;script type=&quot;math/tex&quot;&gt;t(x,y) = rect(\frac{x}{a}) \cdot rect(\frac{y}{b})&lt;/script&gt;&lt;br /&gt;
频谱为：
&lt;script type=&quot;math/tex&quot;&gt;T(\frac{x}{\lambda z}, \frac{y}{\lambda z}) = ab \cdot \mathrm{sinc}(a\frac{x}{\lambda z} ) \cdot \mathrm{sinc}(b\frac{y}{\lambda z})&lt;/script&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;透镜，二次曲面
透镜可看做特殊的孔径遮挡物体，其透过率很高，通过时会产生一个随空间位置呈现二次型分布的相移。&lt;br /&gt;
透镜的&lt;strong&gt;等效透过率函数&lt;/strong&gt;：&lt;br /&gt;
&lt;em&gt;注：通常，输入为发散球面波，输出为会聚球面波。&lt;/em&gt;
&lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[
\begin{aligned}
  t(x,y) &amp;= \frac{U'(x,y)}{U(x,y)} \\
  &amp;=  \Large{ \frac{ A e^{-jkd_i}\cdot e^{-\frac{jk}{2d_i}[(x-x_0)^2+(y-y_0)^2]} }{Ae^{jkd_o}\cdot e^{\frac{jk}{2d_o}[(x-x_0)^2+(y-y_0)^2]}}} \\
  &amp;= \Large{e^{-jk(d_i+d_o)} \cdot e^{-\frac{jk}{2}(\frac{1}{d_i}+\frac{1}{d_o})[(x-x_0)^2+(y-y_0)^2]} }
\end{aligned} %]]&gt;&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;其中 $U’(x,y)$ 为透射光波， $U(x,y)$ 为入射光波，以相距透镜，$\displaystyle e^{-jk(d_i+d_o)}$ 不随空间位置而发生变化，称为常数位相因子。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;</content>

      
      
      
      
      

      <author>
          <name>Dexfire Alex</name>
        
        
      </author>

      

      
        <category term="math" />
      
        <category term="optics" />
      

      
        <summary type="html">【信息光学】几个重要推论</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">【光学】数字图像处理</title>
      <link href="/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86-%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E5%9F%BA%E7%A1%80" rel="alternate" type="text/html" title="【光学】数字图像处理" />
      <published>2020-03-16T11:24:00+00:00</published>
      <updated>2020-03-16T11:24:00+00:00</updated>
      <id>/%E3%80%90%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E3%80%91%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E5%9F%BA%E7%A1%80</id>
      <content type="html" xml:base="/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86-%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E5%9F%BA%E7%A1%80">&lt;h1 id=&quot;数字图像处理基础&quot;&gt;数字图像处理基础&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;低级图像处理
    &lt;ul&gt;
      &lt;li&gt;增强&lt;/li&gt;
      &lt;li&gt;修复&lt;/li&gt;
      &lt;li&gt;平滑&lt;/li&gt;
      &lt;li&gt;压缩
        &lt;ul&gt;
          &lt;li&gt;信噪比&lt;/li&gt;
          &lt;li&gt;压缩比&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;中级图像处理
    &lt;ul&gt;
      &lt;li&gt;分形&lt;/li&gt;
      &lt;li&gt;滤镜&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;高级图像处理
    &lt;ul&gt;
      &lt;li&gt;人脸识别&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content>

      
      
      
      
      

      <author>
          <name>Dexfire Alex</name>
        
        
      </author>

      

      
        <category term="math" />
      
        <category term="optics" />
      

      
        <summary type="html">数字图像处理基础 低级图像处理 增强 修复 平滑 压缩 信噪比 压缩比 中级图像处理 分形 滤镜 高级图像处理 人脸识别</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">【数学】现代工程学数学基础</title>
      <link href="/%E6%95%B0%E5%AD%A6-%E7%8E%B0%E4%BB%A3%E5%B7%A5%E7%A8%8B%E5%AD%A6%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80" rel="alternate" type="text/html" title="【数学】现代工程学数学基础" />
      <published>2020-03-15T22:11:00+00:00</published>
      <updated>2020-03-15T22:11:00+00:00</updated>
      <id>/%E3%80%90%E6%95%B0%E5%AD%A6%E3%80%91%E7%8E%B0%E4%BB%A3%E5%B7%A5%E7%A8%8B%E5%AD%A6%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80</id>
      <content type="html" xml:base="/%E6%95%B0%E5%AD%A6-%E7%8E%B0%E4%BB%A3%E5%B7%A5%E7%A8%8B%E5%AD%A6%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80">&lt;h1 id=&quot;数学现代工程学数学基础&quot;&gt;【数学】现代工程学数学基础&lt;/h1&gt;

&lt;h2 id=&quot;极限与连续&quot;&gt;极限与连续&lt;/h2&gt;

&lt;h3 id=&quot;微分&quot;&gt;微分&lt;/h3&gt;

&lt;h4 id=&quot;多元函数微分法&quot;&gt;多元函数微分法&lt;/h4&gt;

&lt;h3 id=&quot;积分&quot;&gt;积分&lt;/h3&gt;

&lt;h3 id=&quot;向量微分&quot;&gt;向量微分&lt;/h3&gt;

&lt;h2 id=&quot;复变函数&quot;&gt;复变函数&lt;/h2&gt;

&lt;h2 id=&quot;线性代数&quot;&gt;线性代数&lt;/h2&gt;

&lt;h2 id=&quot;无穷级数&quot;&gt;无穷级数&lt;/h2&gt;

&lt;h3 id=&quot;泰勒级数&quot;&gt;泰勒级数&lt;/h3&gt;
&lt;p&gt;数学中，泰勒级数用于展开任意函数，常用于复杂函数的近似计算，如正弦函数 $y(x) = \sin x$，由英国数学家布鲁克·泰勒（Sir Brook Taylor）于1715年发表.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;在自变量零点处求得的泰勒级数又称&lt;strong&gt;麦克劳林级数&lt;/strong&gt;，以英格兰数学家柯林·麦克劳林的名字命名。&lt;/li&gt;
  &lt;li&gt;泰勒级数在近似计算中有着广泛应用。&lt;/li&gt;
  &lt;li&gt;在复变函数的求解中，也常常用到泰勒展开的几种常用形式。&lt;/li&gt;
&lt;/ul&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{aligned}
    f(x) &amp;= \sum_{n=0} ^{\infty} \frac{f^{(n)}(x_0)}{n!}\left(x-x_0\right)^n \\
    &amp;= f(x_0) + f'(x_0)(x-x_0) + \frac{f''(x_0)(x-x_0)^2}{2!}+...+ \frac{f^{(n)}(x_0)(x-x_0)^n}{n!}+...
\end{aligned} %]]&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;$f(x) = \sqrt{1+x}$
&lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[
\begin{aligned}
  f(x) &amp;= f(0) + f'(0)(x-0) + \frac{f^{(2)}(x_0)x^2}+\frac{f^{(3)}x^3}{3!}+... \\
  &amp;= \sqrt{1+0} + \left(\frac{1}{2}\frac{(1+0)^{-\frac{1}{2}}}{1!}x\right) + \left( -\frac{1}{4}\frac{(1+0)^{-\frac{3}{2}}}{2!} x^2\right) + \left( \frac{3}{8} \frac{(1+0)^{-\frac{5}{2}}}{3!}x^3 \right) +... \\
  &amp;= 1 + \frac{1}{2}x - \frac{1}{8}x^2 + \frac{1}{16}x^3+...
\end{aligned} %]]&gt;&lt;/script&gt;&lt;/li&gt;
  &lt;li&gt;$y = \sin x$&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/taylor-series18.png&quot; alt=&quot;taylor-series&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;傅里叶级数&quot;&gt;傅里叶级数&lt;/h3&gt;

&lt;h4 id=&quot;傅里叶变换&quot;&gt;傅里叶变换&lt;/h4&gt;

&lt;h3 id=&quot;拉普拉斯变换&quot;&gt;拉普拉斯变换&lt;/h3&gt;</content>

      
      
      
      
      

      <author>
          <name>Dexfire Alex</name>
        
        
      </author>

      

      
        <category term="math" />
      
        <category term="optics" />
      

      
        <summary type="html">【数学】现代工程学数学基础</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">【光学】透镜的位相调制及傅里叶变换作用</title>
      <link href="/%E5%85%89%E5%AD%A6-%E9%80%8F%E9%95%9C%E7%9A%84%E4%BD%8D%E7%9B%B8%E8%B0%83%E5%88%B6%E5%8F%8A%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2%E4%BD%9C%E7%94%A8" rel="alternate" type="text/html" title="【光学】透镜的位相调制及傅里叶变换作用" />
      <published>2020-03-15T15:37:00+00:00</published>
      <updated>2020-03-15T15:37:00+00:00</updated>
      <id>/%E3%80%90%E5%85%89%E5%AD%A6%E3%80%91%E9%80%8F%E9%95%9C%E7%9A%84%E4%BD%8D%E7%9B%B8%E8%B0%83%E5%88%B6%E5%8F%8A%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2%E4%BD%9C%E7%94%A8</id>
      <content type="html" xml:base="/%E5%85%89%E5%AD%A6-%E9%80%8F%E9%95%9C%E7%9A%84%E4%BD%8D%E7%9B%B8%E8%B0%83%E5%88%B6%E5%8F%8A%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2%E4%BD%9C%E7%94%A8">&lt;h1 id=&quot;光学透镜的位相调制及傅里叶变换作用&quot;&gt;【光学】透镜的位相调制及傅里叶变换作用&lt;/h1&gt;

&lt;p&gt;透镜的透过率函数定义式：
&lt;script type=&quot;math/tex&quot;&gt;t(x,y) = \large{\frac{\text{输出光波}}{输入光波}}&lt;/script&gt;
&lt;script type=&quot;math/tex&quot;&gt;t(x,y)=\frac{U_i^{\prime}(x,y)}{U_i(x,y)}&lt;/script&gt;
考虑入射光波为球面波情形：
&lt;img src=&quot;/assets/images/QQ截图20200315160209.png&quot; alt=&quot;p1&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;球面波&quot;&gt;球面波&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;球面波&lt;/strong&gt;即波阵面为同心球面的波。&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;光源尺度远小于波长$\lambda$时，光源发出的光波可近似为球面波。&lt;/li&gt;
  &lt;li&gt;球面波在自由场（无束缚作用）中传播时，其振幅&lt;code class=&quot;highlighter-rouge&quot;&gt;A&lt;/code&gt;随距离&lt;code class=&quot;highlighter-rouge&quot;&gt;r&lt;/code&gt;成反比例衰减。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;参考：&lt;a href=&quot;https://www.zhihu.com/question/35163381?sort=created&quot;&gt;通过亥姆霍兹方程是如何推导出球面波表达式的？&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;发散单色球面波定义式：
&lt;script type=&quot;math/tex&quot;&gt;U(x,y) = \frac{a_0}{r}e^{jkr}&lt;/script&gt;
取发射方向为 &lt;code class=&quot;highlighter-rouge&quot;&gt;z&lt;/code&gt; 轴正半轴，则有：&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;若为会聚球面波，则为：
&lt;script type=&quot;math/tex&quot;&gt;U(x,y) = \frac{a_0}{r}e^{-jkr}&lt;/script&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;U_i(x,y)=&lt;/script&gt;</content>

      
      
      
      
      

      <author>
          <name>Dexfire Alex</name>
        
        
      </author>

      

      
        <category term="math" />
      
        <category term="optics" />
      

      
        <summary type="html">【光学】透镜的位相调制及傅里叶变换作用</summary>
      

      
      
    </entry>
  
</feed>
